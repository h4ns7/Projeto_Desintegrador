/*CRIAÇÃO DA TABELA ALUNO*/
DROP TABLE IF EXISTS ALUNO CASCADE;
CREATE TABLE ALUNO (
	IDALUNO SERIAL PRIMARY KEY NOT NULL,
	NOME VARCHAR(70) NOT NULL,
	EMAIL VARCHAR(40) NOT NULL,
	CPF VARCHAR(15) UNIQUE NOT NULL,
  	GENERO CHAR(1) NOT NULL CHECK( GENERO IN ('M' ,'F')),
  	LOGRADOURO VARCHAR(70) NOT NULL,
  	CELULAR VARCHAR(11) UNIQUE NOT NULL
);

/*CRIAÇÃO DA TABELA INSTRUTOR*/
DROP TABLE IF EXISTS INSTRUTOR CASCADE;
CREATE TABLE INSTRUTOR (
	IDINSTRUTOR SERIAL PRIMARY KEY NOT NULL,
	NOME VARCHAR(70) NOT NULL,
	EMAIL VARCHAR(40) NOT NULL,
	CPF VARCHAR(15) UNIQUE NOT NULL,
  	GENERO CHAR(1) NOT NULL CHECK( GENERO IN ('M' ,'F')),
  	LOGRADOURO VARCHAR(70) NOT NULL,
  	CELULAR VARCHAR(11) NOT NULL,
	VALORHORA NUMERIC (6,2) NOT NULL
);

/*CRIAÇÃO DA TABELA CURSO*/
DROP TABLE IF EXISTS CURSO CASCADE;
CREATE TABLE CURSO(
	IDCURSO SERIAL PRIMARY KEY NOT NULL,
	NOME_CURSO VARCHAR(40) NOT NULL,
	CARGA_HORARIA NUMERIC NOT NULL,
	VALOR NUMERIC(6,2) NOT NULL
);

/*CRIAÇÃO DA TABELA TURMA*/
DROP TABLE IF EXISTS TURMA CASCADE;
CREATE TABLE TURMA(
	IDTURMA INTEGER PRIMARY KEY,
	ID_INSTRUTOR INTEGER,
	PERIODO CHAR(10) NOT NULL CHECK( PERIODO IN ('Matutino','Vespertino','Noturno')),
	SALA_TURMA CHAR(1) NOT NULL CHECK ( SALA_TURMA IN ('1','2','3') ),
	FOREIGN KEY(ID_INSTRUTOR) REFERENCES INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE ON UPDATE CASCADE 
);

/*RELACINAMENTO NXN CRIA-SE OUTRA TABELA COMBINANDO SUAS CHAVES*/
DROP TABLE IF EXISTS CURSO_TURMA CASCADE;
CREATE TABLE CURSO_TURMA (
	IDCURSO INTEGER REFERENCES CURSO(IDCURSO),
	IDTURMA INTEGER REFERENCES TURMA(IDTURMA),
	PRIMARY KEY (IDCURSO, IDTURMA)
);

/*CRIAÇÃO DA TABELA HISTORICO*/
DROP TABLE IF EXISTS HISTORICO CASCADE;
CREATE TABLE HISTORICO(
	IDHISTORICO INTEGER PRIMARY KEY,
	ID_ALUNO INTEGER NOT NULL,
	VELOCIDADE NUMERIC (6,2) NOT NULL,
	FREQUENCIA NUMERIC (4,2) NOT NULL,
	VOLTA_MAIS_RAPIDA NUMERIC (6,2) UNIQUE NOT NULL,
	NOTA NUMERIC (4,2) NOT NULL,
	RESULTADO CHAR(10) NOT NULL CHECK( RESULTADO IN ('Aprovado','Reprovado')),
	FOREIGN KEY(ID_ALUNO) REFERENCES ALUNO (IDALUNO) ON DELETE CASCADE ON UPDATE CASCADE 
);

/*CRIAÇÃO DA TABELA PROVA*/
DROP TABLE IF EXISTS PROVA CASCADE;
CREATE TABLE PROVA(
	IDPROVA SERIAL PRIMARY KEY,
	NOME_PROVA VARCHAR (30) NOT NULL,
	NOTA NUMERIC(4,2) NOT NULL,
	DATA_PROVA DATE NOT NULL,
	VALOR NUMERIC(6,2) NOT NULL,
	SALA CHAR(1) NOT NULL CHECK ( SALA IN ('1','2','3') ),
	ID_ALUNO INTEGER NOT NULL,
	FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(IDALUNO) ON DELETE CASCADE ON UPDATE CASCADE 
);

/*RELACINAMENTO NXN CRIA-SE OUTRA TABELA COMBINANDO SUAS CHAVES*/
DROP TABLE IF EXISTS CURSO_PROVA CASCADE;
CREATE TABLE CURSO_PROVA (
	IDCURSO INTEGER REFERENCES CURSO(IDCURSO),
	IDPROVA INTEGER REFERENCES PROVA(IDPROVA),
	PRIMARY KEY(IDCURSO, IDPROVA)	
);

/*CRIAÇÃO DA TABELA MATRICULA*/
DROP TABLE IF EXISTS MATRICULA CASCADE;
CREATE TABLE MATRICULA(
	IDMATRICULA INTEGER PRIMARY KEY,
	DATA_MATRICULA DATE NOT NULL,
	ID_ALUNO INTEGER NOT NULL,
	ID_CURSO INTEGER NOT NULL, 
	ID_TURMA INTEGER NOT NULL,
	ID_HISTORICO INTEGER,
	FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO (IDALUNO) ON DELETE CASCADE ON UPDATE CASCADE ,
	FOREIGN KEY (ID_CURSO) REFERENCES CURSO (IDCURSO) ON DELETE CASCADE ON UPDATE CASCADE ,
	FOREIGN KEY (ID_TURMA) REFERENCES TURMA (IDTURMA) ON DELETE CASCADE ON UPDATE CASCADE ,
	FOREIGN KEY (ID_HISTORICO) REFERENCES HISTORICO (IDHISTORICO) ON DELETE CASCADE ON UPDATE CASCADE 
);